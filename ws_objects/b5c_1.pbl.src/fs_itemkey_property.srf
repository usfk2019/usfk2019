$PBExportHeader$fs_itemkey_property.srf
$PBExportComments$원하는 길이로 string을 변환(space를 채우거나 절삭)
global type fs_itemkey_property from function_object
end type

forward prototypes
global function any fs_itemkey_property (string as_invf_type, string as_record)
end prototypes

global function any fs_itemkey_property (string as_invf_type, string as_record);//목적 : 원하는 길이로 만들어주기위해서 spaces붙이거나 절삭함
//인자 : as_source - 대상이 되는 String, ai_len - 원하는 길이

Int li_source_len, ll_seqno, i = 0
String ls_result, ls_seqno_re
Boolean lb_left = True

//If ai_len < 0 Then
//	ai_len = ai_len * -1
//	lb_left = False
//End If
DECLARE invf_recorddet_cu CURSOR FOR
select seqno 
  from invf_recorddet
 where invf_type = :as_invf_type
   and record = :as_record
	and itemkey_property = 'C' ;
	OPEN invf_recorddet_cu;
			
	DO WHILE (True)
		
		Fetch invf_recorddet_cu
		Into :ll_seqno ;
			
		If SQLCA.SQLCode < 0 Then
			Return ls_result
			Exit
		ElseIf SQLCA.SQLCode = 100 Then
			Exit
		End If	
		
		ls_seqno_re += string(ll_seqno) + ';'
	Loop
Close invf_recorddet_cu;

ls_seqno_re = MidA(ls_seqno_re, 1, LenA(ls_seqno_re) - 1)
////If IsNull(as_source) Then as_source = ""
////li_source_len = Len(as_source)
//
//If li_source_len < ai_len Then
//	//왼쪽 채우기
//	If as_gubun = '1' Then
//		ls_result = Fill(as_pad, ai_len - li_source_len) + as_source
//		
//	//오른쪽 채우기
//	ElseIf as_gubun = '2' Then
//		ls_result = as_source + Fill(as_pad, ai_len - li_source_len)
//	Else
//		ls_result = as_source
//	End If
////ElseIf li_source_len > ai_len Then
////	If lb_left Then
////		ls_result = Left(as_source, ai_len)
////	Else
////		ls_result = Right(as_source, ai_len)
////	End If
//Else
//	ls_result = as_source
//End If

Return ls_seqno_re
end function

