$PBExportHeader$fi_check_juminnum.srf
$PBExportComments$[oH] 주민등록번호 체크
global type fi_check_juminnum from function_object
end type

forward prototypes
global function integer fi_check_juminnum (string as_juminnum)
end prototypes

global function integer fi_check_juminnum (string as_juminnum);/////////////////////////////////////////////
// Oh Chung Hwan  2001.02.15 Thursday      //
/////////////////////////////////////////////
// 주민등록번호 정확성 체크                // 
/////////////////////////////////////////////
String ls_jumin
Int li_value[13], li_cnt, li_mod, li_minus, li_check, li_last_jumin, li_odd1, li_odd2, li_odd

// 공백제거
ls_jumin = Trim(as_juminnum)

// 길이가 반드시 13이어야 함.
If LenA(ls_jumin) <> 13 Then Return -1

If Not (MidA(ls_jumin,7,1) = "1" Or MidA(ls_jumin,7,1)="2" Or MidA(ls_jumin,7,1)="3" Or MidA(ls_jumin,7,1) = "4" Or MidA(ls_jumin, 7,1)="5" Or MidA(ls_jumin, 7,1)="6" Or  MidA(ls_jumin, 7,1)="7"  Or MidA(ls_jumin, 7,1)="8"		 Or MidA(ls_jumin, 7,1)="9"  Or  MidA(ls_jumin, 7,1)="0") THEN
	Return -1
End If	


If (MidA(ls_jumin,7,1) = "1" Or MidA(ls_jumin,7,1)="2" Or MidA(ls_jumin,7,1)="3" Or MidA(ls_jumin,7,1) = "4") Then
	
	li_last_jumin = dec(MidA(ls_jumin,13,1))
	li_value[1]   = dec(MidA(ls_jumin,1,1))  * 2
	li_value[2]   = dec(MidA(ls_jumin,2,1))  * 3
	li_value[3]   = dec(MidA(ls_jumin,3,1))  * 4
	li_value[4]   = dec(MidA(ls_jumin,4,1))  * 5
	li_value[5]   = dec(MidA(ls_jumin,5,1))  * 6
	li_value[6]   = dec(MidA(ls_jumin,6,1))  * 7
	li_value[7]   = dec(MidA(ls_jumin,7,1))  * 8
	li_value[8]   = dec(MidA(ls_jumin,8,1))  * 9
	li_value[9]   = dec(MidA(ls_jumin,9,1))  * 2
	li_value[10]  = dec(MidA(ls_jumin,10,1)) * 3
	li_value[11]  = dec(MidA(ls_jumin,11,1)) * 4
	li_value[12]  = dec(MidA(ls_jumin,12,1)) * 5
	li_value[13]  = 0
	
	For li_cnt = 1 To 12
		li_value[13] = li_value[13] + li_value[li_cnt]
	Next
	
	li_mod = Mod(li_value[13],11)
	li_minus = 11 - li_mod
	li_check = Mod(li_minus,10)
	
ElseIf (MidA(ls_jumin, 7,1)="5" Or MidA(ls_jumin, 7,1)="6" Or MidA(ls_jumin, 7,1)="7"  Or MidA(ls_jumin, 7,1)="8" Or MidA(ls_jumin, 7,1)="9" Or  MidA(ls_jumin, 7,1)="0" ) Then
		 
	li_odd1 = dec(MidA(ls_jumin,8,1)) 
   li_odd2 = dec(MidA(ls_jumin,9,1))
	
	li_odd = li_odd1 * 10 + li_odd2
	
	If Not(Mod(li_odd ,2) = 0 )Then
		Return -1
	End If
	
	If Not(MidA(ls_jumin, 12,1) ="6"  Or MidA(ls_jumin, 12,1)="7" Or MidA(ls_jumin, 12,1) ="8" Or MidA(ls_jumin, 12,1)="9") Then
		Return -1
	End If

	li_last_jumin = dec(MidA(ls_jumin,13,1))
	li_value[1]   = dec(MidA(ls_jumin,1,1))  * 2
	li_value[2]   = dec(MidA(ls_jumin,2,1))  * 3
	li_value[3]   = dec(MidA(ls_jumin,3,1))  * 4
	li_value[4]   = dec(MidA(ls_jumin,4,1))  * 5
	li_value[5]   = dec(MidA(ls_jumin,5,1))  * 6
	li_value[6]   = dec(MidA(ls_jumin,6,1))  * 7
	li_value[7]   = dec(MidA(ls_jumin,7,1))  * 8
	li_value[8]   = dec(MidA(ls_jumin,8,1))  * 9
	li_value[9]   = dec(MidA(ls_jumin,9,1))  * 2
	li_value[10]  = dec(MidA(ls_jumin,10,1)) * 3
	li_value[11]  = dec(MidA(ls_jumin,11,1)) * 4
	li_value[12]  = dec(MidA(ls_jumin,12,1)) * 5
	li_value[13]  = 0
	
	For li_cnt = 1 To 12
		li_value[13] = li_value[13] + li_value[li_cnt]
	Next
	
	li_mod = Mod(li_value[13],11)
	li_minus = 11 - li_mod
	li_check = Mod(li_minus,10)
	
	li_check +=2
	
	li_check = Mod(li_check,10)
	
End If


If li_check <> li_last_jumin Then
   // 틀린주민번호
   Return -1
Else
   // 맞는 주민번호
   Return 0
End If

end function

